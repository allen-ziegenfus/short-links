/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.osb.www.shortlink.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ShortLinkEntry service. Represents a row in the &quot;ShortLink_ShortLinkEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.osb.www.shortlink.model.impl.ShortLinkEntryModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.osb.www.shortlink.model.impl.ShortLinkEntryImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ShortLinkEntry
 * @generated
 */
@ProviderType
public interface ShortLinkEntryModel extends BaseModel<ShortLinkEntry> {

	/**
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a short link entry model instance should use the {@link ShortLinkEntry} interface instead.
	 */

	/**
	 * Returns the primary key of this short link entry.
	 *
	 * @return the primary key of this short link entry
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this short link entry.
	 *
	 * @param primaryKey the primary key of this short link entry
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this short link entry.
	 *
	 * @return the uuid of this short link entry
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this short link entry.
	 *
	 * @param uuid the uuid of this short link entry
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the short link entry ID of this short link entry.
	 *
	 * @return the short link entry ID of this short link entry
	 */
	public long getShortLinkEntryId();

	/**
	 * Sets the short link entry ID of this short link entry.
	 *
	 * @param shortLinkEntryId the short link entry ID of this short link entry
	 */
	public void setShortLinkEntryId(long shortLinkEntryId);

	/**
	 * Returns the create date of this short link entry.
	 *
	 * @return the create date of this short link entry
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this short link entry.
	 *
	 * @param createDate the create date of this short link entry
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this short link entry.
	 *
	 * @return the modified date of this short link entry
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this short link entry.
	 *
	 * @param modifiedDate the modified date of this short link entry
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the original url of this short link entry.
	 *
	 * @return the original url of this short link entry
	 */
	@AutoEscape
	public String getOriginalURL();

	/**
	 * Sets the original url of this short link entry.
	 *
	 * @param originalURL the original url of this short link entry
	 */
	public void setOriginalURL(String originalURL);

	/**
	 * Returns the short url of this short link entry.
	 *
	 * @return the short url of this short link entry
	 */
	@AutoEscape
	public String getShortURL();

	/**
	 * Sets the short url of this short link entry.
	 *
	 * @param shortURL the short url of this short link entry
	 */
	public void setShortURL(String shortURL);

	/**
	 * Returns the http status code of this short link entry.
	 *
	 * @return the http status code of this short link entry
	 */
	public int getHttpStatusCode();

	/**
	 * Sets the http status code of this short link entry.
	 *
	 * @param httpStatusCode the http status code of this short link entry
	 */
	public void setHttpStatusCode(int httpStatusCode);

	/**
	 * Returns the active of this short link entry.
	 *
	 * @return the active of this short link entry
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this short link entry is active.
	 *
	 * @return <code>true</code> if this short link entry is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this short link entry is active.
	 *
	 * @param active the active of this short link entry
	 */
	public void setActive(boolean active);

}